name: TCS Joining Letter Check

on:
  schedule:
    # Runs at 12:00 PM IST (6:30 AM UTC) and 8:00 PM IST (2:30 PM UTC) every day
    - cron: '30 6,14 * * *'
  # Allow manual triggering
  workflow_dispatch:

env:
  # Default environment variables
  HEADLESS: "True"
  SCRIPT_TIMEOUT: "100"

jobs:
  check-joining-letter:
    name: Check TCS Joining Letter
    runs-on: ubuntu-latest
    timeout-minutes: 5  # Will automatically stop after 5 minutes
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libnss3-dev libatk1.0-0 libatk-bridge2.0-0 libcups2 libdrm2 libxkbcommon0 libxcomposite1 libxdamage1 libxfixes3 libxrandr2 libgbm1 libasound2
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install playwright
        # Install only Chromium browser
        playwright install chromium
        # Install only the necessary dependencies for Chromium
        sudo apt-get install -y --no-install-recommends \
            libnss3 \
            libnspr4 \
            libatk1.0-0 \
            libatk-bridge2.0-0 \
            libcups2 \
            libdrm2 \
            libxkbcommon0 \
            libxcomposite1 \
            libxdamage1 \
            libxfixes3 \
            libxrandr2 \
            libgbm1 \
            libasound2 \
            libatspi2.0-0 \
            libxshmfence1
    
    - name: Run TCS Joining Letter Check
      env:
        TCS_EMAIL: ${{ secrets.TCS_EMAIL }}
        GMAIL_EMAIL: ${{ secrets.GMAIL_EMAIL }}
        GMAIL_APP_PASSWORD: ${{ secrets.GMAIL_APP_PASSWORD }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        HEADLESS: ${{ env.HEADLESS }}
        SCRIPT_TIMEOUT: ${{ env.SCRIPT_TIMEOUT }}
      run: |
        python main.py
      
    - name: Upload logs
      if: always()  # Run this step even if previous steps fail
      uses: actions/upload-artifact@v4
      with:
        name: logs-${{ github.run_id }}
        path: logs/
        retention-days: 7